<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>YvesXu</title>
  
  <subtitle>技术 · 生活 · 人间值得</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.yvesxu.com/"/>
  <updated>2020-09-10T14:12:52.975Z</updated>
  <id>http://www.yvesxu.com/</id>
  
  <author>
    <name>YvesXu</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>20200910-detectron2-02-demo</title>
    <link href="http://www.yvesxu.com/2020/09/10/20200910-detectron2-02-demo/"/>
    <id>http://www.yvesxu.com/2020/09/10/20200910-detectron2-02-demo/</id>
    <published>2020-09-10T14:12:52.000Z</published>
    <updated>2020-09-10T14:12:52.975Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>detectron2 源码阅读01 安装流程</title>
    <link href="http://www.yvesxu.com/2020/09/10/20200910-detectron2-01-installation/"/>
    <id>http://www.yvesxu.com/2020/09/10/20200910-detectron2-01-installation/</id>
    <published>2020-09-10T01:25:24.000Z</published>
    <updated>2020-09-10T14:24:08.785Z</updated>
    
    <content type="html"><![CDATA[<h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><p><a href="https://github.com/facebookresearch/detectron2">Detectron2</a> 是Facebook AI Research (FAIR)开源的目标检测框架，在一代的基础上，基于Pytorch进行了实现。模型涵盖目标检测的Faster R-CNN, RetinaNet, 实例分割的Mask R-CNN, 关键点估计的Dense Pose, 全景分割的Panoptic FPN等多个模型，以及相应数据的加载等。</p><p>由于在项目实现过程，明显发现设计一个系统与解决一道代码题目是两个不同的概念。正好项目中需要用到Detectron2的部分代码，因此将Detectron2作为自己学习代码规范和项目实现的样例。</p><h3 id="主机环境"><a href="#主机环境" class="headerlink" title="主机环境"></a>主机环境</h3><div class="table-container"><table><thead><tr><th style="text-align:center">名称</th><th style="text-align:center">版本</th></tr></thead><tbody><tr><td style="text-align:center">操作系统</td><td style="text-align:center">Linux 16.04</td></tr><tr><td style="text-align:center">显卡</td><td style="text-align:center">GTX Titan X</td></tr><tr><td style="text-align:center">驱动</td><td style="text-align:center">418.56</td></tr><tr><td style="text-align:center">CUDA</td><td style="text-align:center">9.0</td></tr><tr><td style="text-align:center">Conda</td><td style="text-align:center">4.84</td></tr></tbody></table></div><h3 id="安装过程"><a href="#安装过程" class="headerlink" title="安装过程"></a>安装过程</h3><p>逐行运行下列命令即可，按照<a href="https://detectron2.readthedocs.io/tutorials/install.html">官方文档</a>运行的时候，发现少了<code>opencv-python</code>库，因此补了一条。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">conda create -n detectron2 python&#x3D;3.6</span><br><span class="line">conda activate detectron2</span><br><span class="line">conda install pytorch torchvision cudatoolkit&#x3D;9.2 -c pytorch</span><br><span class="line">pip install opencv-python</span><br><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;facebookresearch&#x2F;detectron2.git</span><br><span class="line">python -m pip install -e detectron2</span><br></pre></td></tr></table></figure><h3 id="Demo测试"><a href="#Demo测试" class="headerlink" title="Demo测试"></a>Demo测试</h3><h4 id="数据准备"><a href="#数据准备" class="headerlink" title="数据准备"></a>数据准备</h4><p>提前找一张图片放进<code>demo</code>文件夹中，这里从<a href="http://www.gudaimi.com/Sjfyltu/201812/99590.html">网络</a>随机照了一张图片，保存的文件名为 <code>test_pic.jpg</code>，结果并保存为同目录下的<code>res_pic.jpg</code> (<code>--output</code> 后的参数)；如果要测试视频，输出参数要将<code>--input</code> 改为<code>--video-input</code>。其余参数可以使用<code>python demo.py -h</code> 进行查看。</p><h4 id="代码运行"><a href="#代码运行" class="headerlink" title="代码运行"></a>代码运行</h4><p>进入<code>demo</code>文件夹测试</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd dtectron2&#x2F;demo</span><br><span class="line">python demo.py --config-file ..&#x2F;configs&#x2F;COCO- InstanceSegmentation&#x2F;mask_rcnn_R_50_FPN_3x.yaml \</span><br><span class="line">--input test_pic.jpg --output res_pic.jpg --opts MODEL.WEIGHTS \</span><br><span class="line">detectron2:&#x2F;&#x2F;COCO-InstanceSegmentation&#x2F;mask_rcnn_R_50_FPN_3x&#x2F;137849600&#x2F;model_final_f10217.pkl</span><br></pre></td></tr></table></figure><h5 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h5><p><img src="http://hexotuchuang.oss-cn-beijing.aliyuncs.com/blog_init/post/detectron2/test_pic.jpeg" alt="输入图像"></p><h5 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h5><p><img src="http://hexotuchuang.oss-cn-beijing.aliyuncs.com/blog_init/post/detectron2/res_pic.jpg" alt="测试结果"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h4&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/facebookresearch/detectron2&quot;&gt;Detectron2&lt;/a
      
    
    </summary>
    
    
      <category term="detectron2" scheme="http://www.yvesxu.com/categories/detectron2/"/>
    
    
      <category term="源码阅读" scheme="http://www.yvesxu.com/tags/%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB/"/>
    
      <category term="深度学习" scheme="http://www.yvesxu.com/tags/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="pytorch" scheme="http://www.yvesxu.com/tags/pytorch/"/>
    
  </entry>
  
  <entry>
    <title>detectron2 源码阅读01 安装流程</title>
    <link href="http://www.yvesxu.com/2020/09/10/detectron2-01-installation-20200910/"/>
    <id>http://www.yvesxu.com/2020/09/10/detectron2-01-installation-20200910/</id>
    <published>2020-09-10T01:25:24.000Z</published>
    <updated>2020-09-10T14:14:52.164Z</updated>
    
    <content type="html"><![CDATA[<h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><p><a href="https://github.com/facebookresearch/detectron2">Detectron2</a> 是Facebook AI Research (FAIR)开源的目标检测框架，在一代的基础上，基于Pytorch进行了实现。模型涵盖目标检测的Faster R-CNN, RetinaNet, 实例分割的Mask R-CNN, 关键点估计的Dense Pose, 全景分割的Panoptic FPN等多个模型，以及相应数据的加载等。</p><p>由于在项目实现过程，明显发现设计一个系统与解决一道代码题目是两个不同的概念。正好项目中需要用到Detectron2的部分代码，因此将Detectron2作为自己学习代码规范和项目实现的样例。</p><h3 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h3><div class="table-container"><table><thead><tr><th style="text-align:center">名称</th><th style="text-align:center">版本</th></tr></thead><tbody><tr><td style="text-align:center">操作系统</td><td style="text-align:center">Linux 16.04</td></tr><tr><td style="text-align:center">显卡</td><td style="text-align:center">GTX Titan X</td></tr><tr><td style="text-align:center">驱动</td><td style="text-align:center">418.56</td></tr><tr><td style="text-align:center">CUDA</td><td style="text-align:center">9.0</td></tr><tr><td style="text-align:center">Conda</td><td style="text-align:center">4.84</td></tr></tbody></table></div><h3 id="安装过程"><a href="#安装过程" class="headerlink" title="安装过程"></a>安装过程</h3><p>逐行运行下列命令即可，按照<a href="https://detectron2.readthedocs.io/tutorials/install.html">官方文档</a>运行的时候，发现少了<code>opencv-python</code>库，因此补了一条。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">conda create -n detectron2 python&#x3D;3.6</span><br><span class="line">conda activate detectron2</span><br><span class="line">conda install pytorch torchvision cudatoolkit&#x3D;9.2 -c pytorch</span><br><span class="line">pip install opencv-python</span><br><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;facebookresearch&#x2F;detectron2.git</span><br><span class="line">python -m pip install -e detectron2</span><br></pre></td></tr></table></figure><h3 id="代码测试"><a href="#代码测试" class="headerlink" title="代码测试"></a>代码测试</h3><p>提前找一张图片放进<code>demo</code>文件夹中，这里保存的文件名为 <code>test_pic.jpg</code>，结果并保存为同目录下的<code>res_pic.jpg</code> (<code>--output</code> 后的参数)；如果要测试视频，输出参数要将<code>--input</code> 改为<code>--video-input</code>。其余参数可以使用<code>python demo.py -h</code> 进行查看。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd dtectron2&#x2F;demo</span><br><span class="line">python demo.py --config-file ..&#x2F;configs&#x2F;COCO- InstanceSegmentation&#x2F;mask_rcnn_R_50_FPN_3x.yaml \</span><br><span class="line">--input test_pic.jpg --output res_pic.jpg --opts MODEL.WEIGHTS \</span><br><span class="line">detectron2:&#x2F;&#x2F;COCO-InstanceSegmentation&#x2F;mask_rcnn_R_50_FPN_3x&#x2F;137849600&#x2F;model_final_f10217.pkl</span><br></pre></td></tr></table></figure><p>Demo运行结果<br><img src="http://hexotuchuang.oss-cn-beijing.aliyuncs.com/blog_init/post/detectron2/res_pic.jpg" alt="输入图像"></p><p><img src="http://hexotuchuang.oss-cn-beijing.aliyuncs.com/blog_init/post/detectron2/test_pic.jpeg" alt="测试结果"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h4&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/facebookresearch/detectron2&quot;&gt;Detectron2&lt;/a
      
    
    </summary>
    
    
      <category term="detectron2" scheme="http://www.yvesxu.com/categories/detectron2/"/>
    
    
      <category term="源码阅读" scheme="http://www.yvesxu.com/tags/%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB/"/>
    
      <category term="深度学习" scheme="http://www.yvesxu.com/tags/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="pytorch" scheme="http://www.yvesxu.com/tags/pytorch/"/>
    
  </entry>
  
  <entry>
    <title>蝉鸣低语</title>
    <link href="http://www.yvesxu.com/2020/06/30/gossip_001/"/>
    <id>http://www.yvesxu.com/2020/06/30/gossip_001/</id>
    <published>2020-06-30T10:15:24.000Z</published>
    <updated>2020-08-18T05:54:23.613Z</updated>
    
    <content type="html"><![CDATA[<h2 id="引子"><a href="#引子" class="headerlink" title="引子"></a>引子</h2><p>十七年的蛰伏，只为一个盛夏，只为这个盛夏。</p><p>无人的深夜，从地下钻出。这并不是第一次看见这个世界，上一次不过是十七年前，出生后的匆匆一瞥。现在，依旧无暇关注，因为还有更重要的事情等着我。爬上树梢，准备开启生命中的最后一个阶段。在原来的身体里挣扎着，感受着躯壳撕裂开来，一点一点的剥离开来。相同的事情，已经经历了四次，现如今看着褪下的身躯，感叹着这是最后一次了，终于到最后一次了，梦想化作双翼。至此，总算拥有了生命，与灵魂契合的生命。</p><h2 id="缘起"><a href="#缘起" class="headerlink" title="缘起"></a>缘起</h2><p>自己的身份证快要过期了，下一张的有效期便是二十年。大哥自成年之后，即将走上奔三的生涯。终于是到了这个失去的年纪，不论是自己的亲人，抑或是崇拜的偶像，从霍金到张守晟，从金庸到斯坦·李，那些为人类科学事业不断奉献的人，那些伴随着自己成长的角色，终究都成了过往。</p><p>自从大学毕业之后，时间过得飞快。不记得哪一天开始，不怎么找歌听了，觉得现在列表里的就不错。也追不上新番了，仿佛中二病，黑子的篮球还是去年的番，夏目友人帐第五季，也不过是刚出的消息。最近买来的游戏，静静的躺在那里，看完了游戏启动画面，就再也没有然后。或许只是出于情怀喜+1吧，半开玩笑的说着“自己花钱买的游戏，凭什么还要花时间玩”，心里却多少有些落寞。遇到事情，不论好坏，也不愿去多谈什么，只是默默放在心底。</p><p>回首过去，才发觉忙忙碌碌，却什么都没有做。学了很多，却又什么都没有记住。人生实苦，于我而言，生命本身是没有意义的，更多的是寻找意义的过程，以及这一生中，不论悲喜，给自己留下的感觉。</p><p>未来，我如果有一个孩子，我不指望他能达成多大的成就，不求大富大贵，不求功名显赫。但是我想在灿烂星河下讲着牛郎织女的故事，说着奥林匹斯山上众神的纷争，告诉他阿基米德撬动地球的支点，以及梵高笔下的星夜。希望他能够领略浩瀚宇宙中的美景，更希望他能够被那一段段深情的文字所打动，为科学的公式所折服，为艺术的升华所感染。在万家灯火中，体验人间冷暖，学会感恩，懂得体谅。终于，他觉得无愧此生，平静坦然地按自己的计划过完余生。</p><p>可是孩子终究是独立的个体，本不应该按照我设定的路线走下去。这个世界，有太多的不如意，带他来到这个世界，或许就已经亏欠他太多了。直到朋友说起，这可能也是你想成为的人吧。那一刻，才意识到，原来这是自己想要成为的样子啊。自己终究不能免俗，将自己未完成的事情，寄希望于自己的孩子，更可笑的是自己还不自知。又或许是自己早早的框定了自己的余生，已经没有去戍守边疆，保家卫国，若是用尽全力，去做一些事情，做成一些事情，就很好了。</p><p>关于余生，我总需要一个出口。筹划了很久的博客，总算在今年提上了日程，记下人间的美好，存下自己的呢喃，也为自己的盛夏蛰伏。故此，蝉鸣。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;引子&quot;&gt;&lt;a href=&quot;#引子&quot; class=&quot;headerlink&quot; title=&quot;引子&quot;&gt;&lt;/a&gt;引子&lt;/h2&gt;&lt;p&gt;十七年的蛰伏，只为一个盛夏，只为这个盛夏。&lt;/p&gt;
&lt;p&gt;无人的深夜，从地下钻出。这并不是第一次看见这个世界，上一次不过是十七年前，出生后的
      
    
    </summary>
    
    
      <category term="gossip" scheme="http://www.yvesxu.com/categories/gossip/"/>
    
    
      <category term="人间值得" scheme="http://www.yvesxu.com/tags/%E4%BA%BA%E9%97%B4%E5%80%BC%E5%BE%97/"/>
    
  </entry>
  
</feed>
